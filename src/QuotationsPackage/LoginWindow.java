/**
 * Class for LoginWindow
 * Displays user login/password, and allows user to login to application
 * @author Casey Harford
 * 
 */
package QuotationsPackage;

import java.sql.*;
import com.mysql.jdbc.Connection;

public class LoginWindow extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public LoginWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to			// This method was generated with NetBeans
     * initialize the form.												// I modified as necessary
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        noticeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        usernameLabel.setText("Username:");

        passwordLabel.setText("Password:");

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        titleLabel.setText("Login");

        noticeLabel.setText("Your username is your first name.");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(titleLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(noticeLabel)
                        .add(18, 18, 18))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(36, 36, 36)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(passwordLabel)
                            .add(usernameLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(passwordField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .add(usernameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(cancelButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(loginButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(titleLabel)
                        .add(18, 18, 18))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(noticeLabel)
                        .add(6, 6, 6)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(usernameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(usernameLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(passwordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(passwordLabel))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(loginButton)
                    .add(cancelButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * loginButtonActionPerformed method, this method gets called when the login button is pressed. 
     * It checks to see if user is a valid user, and there password is correct, if so logs user in.
     * @param evt   The action being performed(pressing login button)
     */
	private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
	    
        /* get the username which was enetered */
	    String usernameEntered = usernameField.getText();
	    
        /* get the password which was enetered */
	    String passwordEntered = passwordField.getText();

        /* we'll use this to connect to database */
	    Connection conn = null;
    
	    try {
	        /* count the number of rows returned */
	        int count = 0;
	        
	        /* store the userID temporarily, default is 0(unknown) */
	        int userID = 0;
	        
	        /* store the user's first name temporarily */
	        String userFirst = "";

	        /* store the user's last name temporarily */
	        String userLast = "";
        
            /* using a PreparedStatement to perform a SELECT */
	        PreparedStatement ps;
	        
	        /* store the result in a ResultSet */
	        ResultSet rs = null;
	        
	        /* preparing the statement... */
	        ps = Quotations.conn.prepareStatement("SELECT FirstName,LastName,UserID FROM Users WHERE LastName = ? AND UserPassword = ?");
	        
	        /* set the parameter for username */
	        ps.setString(1,usernameEntered);

	        /* set the parameter for username */
	        ps.setString(2,passwordEntered);
	        
	        /* parameters are set, execute the query! */
	        rs = ps.executeQuery();
	        
	        /* iterate through rows returned, counting each */
	        while(rs.next()) {
	            
	            /* increment the count for rows */
	            count++;
	            
	            /* store the userID */
	            userID = rs.getInt("UserID");
	            
	            /* store the userFirst, this way we don't have to perform another database select
	                statement at the main menu for displaying user's first and last name.*/
	            userFirst = rs.getString("FirstName");
	            
	            /* store the userLast name */
	            userLast = rs.getString("LastName");
	        }
	        
	        /* if the count is greater to 0, that means there was a match! time to login the user.*/
	        if(count>0) {

                /* change logged_in to true, meaning the user is signed in */
	            Quotations.logged_in = true;
	            
	            /* store their first name */
	            Quotations.currentUserFirst = userFirst;

	            /* store their last name */
	            Quotations.currentUserLast = userLast;
	            
	            /* store the user's ID, since it's possible to have user's with the same first and last name */
	            Quotations.currentUserID = userID;
	            
	            /* the user is now logged in, open the main menu */
	            Quotations.openMainMenu();
	            
	            /* and close this window */
	            this.dispose();
	        }
	    }
	    /* any exceptions? we'll catch them here. */
	    catch(Exception e) {
	        System.err.println(e.getMessage());
	    }
	}//GEN-LAST:event_loginButtonActionPerformed

    /**
     * cancelButtonActionPerformed method, closes the current window, and returns to main menu
     * @param evt   action being performed(user clicked cancel)
     */
	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
	    
	    /* open the main menu */
	    Quotations.openMainMenu();

        /* and close this one */
	    this.dispose();
	}//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel noticeLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
